---
import Layout from "../layouts/Layout.astro";
import { getCollection } from "astro:content";

const products = await getCollection("products");
const [inStockProducts, outOfStockProducts] = partition(
  products,
  (product) =>
    product.data.absenceRanges.at(-1)?.end === undefined ||
    product.data.absenceRanges.at(-1)?.end !==
      new Date().toISOString().split("T")[0]
);

function partition<T>(array: T[], predicate: (item: T) => boolean): [T[], T[]] {
  const truthy: T[] = [];
  const falsy: T[] = [];
  for (const item of array) {
    if (predicate(item)) {
      truthy.push(item);
    } else {
      falsy.push(item);
    }
  }
  return [truthy, falsy];
}
---

<Layout>
  <main>
    <h1 id="in-stock">Products in stock now</h1>
    <ul aria-labelledby="in-stock">
      {
        inStockProducts.map((product) => (
          <li>
            <a href={`${import.meta.env.BASE_URL}/products/${product.id}`}>
              {product.id}
            </a>
          </li>
        ))
      }
    </ul>

    <h1 id="out-of-stock">Products out of stock</h1>
    <ul aria-labelledby="out-of-stock">
      {
        outOfStockProducts.map((product) => (
          <li>
            <a href={`${import.meta.env.BASE_URL}/products/${product.id}`}>
              {product.id}
            </a>
          </li>
        ))
      }
    </ul>
  </main>
</Layout>

<style>
  main {
    padding-block: var(--wa-space-2xl);
  }

  ul {
    margin-block-end: var(--wa-space-4xl);
  }

  h1 {
    position: sticky;
    top: 0;
    background: var(--wa-color-surface-default);
    padding-block-end: var(--wa-space-xs);
    margin-block-end: 0;
  }
</style>
